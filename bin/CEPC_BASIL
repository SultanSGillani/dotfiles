#!/usr/bin/python

import sys
from mininet.net import Mininet
from mininet.node import Controller, RemoteController, OVSKernelSwitch, IVSSwitch, UserSwitch
from mininet.link import Link, TCLink
from mininet.cli import CLI
from mininet.log import setLogLevel


def topology():
    controllerip = sys.argv[1]
    net = Mininet(switch=OVSKernelSwitch, autoSetMacs=True)
    c1 = net.addController(RemoteController('c1', ip=controllerip, port=6633))
    def genHostName(loc, k): return 'h%s1%d' % (loc, k)
    hosts, switches, dpid = {}, {}, 0

    switches = 4   # total switches

    cons = 2     # connections with next switch
    hosts = 1    # nodes per switch

    # Create host and Switch
    # Add link :: host to switch
    for s_num in range(1, switches + 1):

        hmac = "00:00:" + str(s_num) + ":00:00:00"

        switch = net.addSwitch("s%s" % (s_num), protocols='OpenFlow13', dpid="43200000%s" % (s_num))
        for h_num in range(1, hosts + 1):
            print("host%s" % h_num)

            # host = net.addHost("h%s" %(h_num + ((s_num) * hosts)))
            host = net.addHost("h%s" % (h_num + ((s_num) * hosts)), mac=hmac)

            net.addLink(host, switch)

    # Add link :: switch to switch
    for src in range(1, switches + 1):
        for c_num in range(1, cons + 1):
            dst = src + c_num
            if dst <= switches:
                print("s%s" % src, "s%s" % dst)
                net.addLink("s%s" % src, "s%s" % dst)
            else:
                dst = dst - switches
                if src - dst > cons:
                    print("s%s" % src, "s%s" % dst)
                    net.addLink("s%s" % src, "s%s" % dst)

    print("*** Starting network")
    net.start()
    print("*** Running CLI")
    CLI(net)
    print("*** Stopping network")
    net.stop()


if __name__ == '__main__':
    setLogLevel('info')
    # setLogLevel( 'debug')
    topology()
