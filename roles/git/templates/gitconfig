[hub]
protocol = ssh
[user]
name = Sultan Gillani
email = sultan.gillani@ntgfreight.com,

[alias]
a = add
st = status
s = status
co = checkout
cob = checkout -b
c = checkout
ci = commit
noff = merge --no-ff
plr = pull --rebase
amend = commit --amend
wip = commit --no-verify -am "WIP"
br = branch
# diff-so-fancy
# https://github.com/so-fancy/diff-so-fancy/#usage
df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
dfs = df --staged
# Get changes for a single commit
dfc = "!dfc() { git df $1^ $1; }; dfc"

please = push --force-with-lease
# publish current branch
publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"

# http://gggritso.com/human-git-aliases
unstage = reset -q HEAD --
discard = checkout --
uncommit = reset --mixed HEAD~

l = log --graph --decorate --oneline --abbrev-commit --all
h = log --graph --decorate --oneline --abbrev-commit

issues = !hub browse -- issues
url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha; }; f"
# Copy current branch name to clipboard (macOS only)
cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "
feature = flow feature start
finfeature = flow feature finish
fix = flow hotfix start
finfix = flow hotfix finish
release = flow release start
finrelease = flow release finish
track = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
[color]
diff = auto
status = auto
branch = auto
ui = true
[core]
excludesfile = ~/.gitignore_global
editor = vim
[apply]
whitespace = nowarn
[mergetool]
keepBackup = false
[difftool]
prompt = false
[fetch]
prune=true
[pull]
rebase=false
[merge]
ff=only
autoStash=true
[push]
default = simple
followTags = true
[github]
user = sultan.gillani
[commit]
gpgsign = false
[rebase]
autoStash=true
autosquash=true
