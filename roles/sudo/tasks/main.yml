---
- name: include os specific tasks
  include_tasks: "{{ ansible_facts['os_family']|lower }}.yml"
  when: ansible_facts['os_family']|lower is defined

- name: include os specific vars
  include_vars: "{{ ansible_facts['os_family']|lower }}.yml"
  when: ansible_facts['os_family']|lower is defined

- name: Make sure group is created
  group:
    name: "{{ sudoers_group }}"
    state: present
  become: yes
  become_user: root
  tags:
    - initial

- name: Make sure user is added to sudoers group
  user:
    name: "{{ zsh_user }}"
    append: yes
    groups: "{{ sudoers_group }}"
  become: yes
  become_user: root

- name: "Create or Update sudoers configuration in /etc/sudoers.d/{{ sudoers_file }}"
  template:
    src: "etc/sudoers.d/ansible.j2"
    dest: "/etc/sudoers.d/{{ sudoers_file }}"
    validate: "visudo -cf %s"
    owner: root
    group: "{{ sudoers_group }}"
    mode: "0440"
  become: yes
  become_user: root
  tags:
    - update

- debug:
    msg: "{{ purge_other_sudoers_files | bool }}"

- name: List files in /etc/sudoers.d
  find:
    paths: /etc/sudoers.d
    patterns: "*"
  register: sudoers_contents
  changed_when: no
  when: purge_other_sudoers_files | bool == 'false'
  become: yes
  become_user: root

- name: Remove unmanaged /etc/sudoers.d/ files
  file:
    path: "/etc/sudoers.d/{{ item.path|basename }}"
    state: absent
  loop: "{{ sudoers_contents.files }}"
  loop_control:
    label: "{{ item.path }}"
  when:
    - purge_other_sudoers_files | bool == 'false'
    - (item.path|basename) != sudoers_file
  become: yes
  become_user: root
