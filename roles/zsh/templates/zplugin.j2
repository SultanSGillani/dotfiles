#################################################################
# FUNCTIONS TO MAKE CONFIGURATION LESS VERBOSE
#

turbo0()   { zplugin ice wait"0a" lucid             "${@}"; }
turbo1()   { zplugin ice wait"0b" lucid             "${@}"; }
turbo2()   { zplugin ice wait"0c" lucid             "${@}"; }
zcommand() { zplugin ice wait"0b" lucid as"command" "${@}"; }
zload()    { zplugin load                           "${@}"; }
zsnippet() { zplugin snippet                        "${@}"; }
zsvn() { zplugin ice svn                        "${@}"; }
zcr() { zplugin creinstall -q "${@}"; }

zt() { zplugin ice wait"${1}" lucid               "${@:2}"; } # Turbo
zl()  { [ -zl $2 ] && zplugin light "${@}" || zplugin "${@}"; } # zplugin

################################################################

# PROMPT

{% if zsh_prompt == 'agkozak' %}
zl agkozak/agkozak-zsh-prompt
{% elif zsh_prompt == 'powerlevel10k' %}
zl romkatv/powerlevel10k
{% elif zsh_prompt == 'alien' %}
turbo0 pick"alien.zsh" multisrc'modules/{async,git,init,prompt,python,svn,system,theme}.zsh'
zl eendroroy/alien
{% endif %}

# oh-my-zsh
zt 0a
zsvn; zsnippet OMZ::plugins/emoji
zt 0a
zsvn; zsnippet OMZ::plugins/pip
zt 0a
zsvn; zsnippet OMZ::plugins/python
zt 0a
zsvn; zsnippet OMZ::plugins/virtualenv
turbo0
zsvn; zsnippet OMZ::plugins/git
turbo0
zsvn; zsnippet OMZ::plugins/archlinux
turbo0
zsvn; zsnippet OMZ::plugins/tmux
turbo0
zsvn; zsnippet OMZ::plugins/urltools

turbo0 compile"*.lzui"
zl zdharma/zui

zplugin ice wait'[[ -n ${ZLAST_COMMANDS[(r)cras*]} ]]'
zl zdharma/zplugin-crasis

zt 0a svn
zsnippet PZT::modules/tmux

zcommand cp"httpstat.sh -> httpstat" pick"httpstat"
zl b4b4r07/httpstat

zt 0a as"program" pick"zsh-better-npm-completion.plugin.zsh"; zl lukechilds/zsh-better-npm-completion

{% if ansible_facts['os_family']|lower == "darwin" %}
zsvn; zsnippet PZT::modules/osx
{% endif %}

{% if ansible_facts['distribution']|lower == "debian" %}
turbo0
zsnippet OMZ::plugins/debian/debian.plugin.zsh
{% endif %}

{% if ansible_facts['distribution']|lower == "ubuntu" %}
turbo0
zsnippet OMZ::plugins/ubuntu/ubuntu.plugin.zsh
{% endif %}

zplugin ice wait"2" lucid as"program" pick"$ZPFX/bin/git-now" make"prefix=$ZPFX install"
zl iwata/git-now

zplugin ice wait"2" lucid as"program" pick"$ZPFX/bin/git-alias" make"PREFIX=$ZPFX" nocompile
zl tj/git-extras

if [ -f ${HOME}/.zplugin/plugins/tj---git-extras/etc/git-extras-completion.zsh ]; then
    source ${HOME}/.zplugin/plugins/tj---git-extras/etc/git-extras-completion.zsh
fi

## fzf
# Install `fzf` bynary and tmux helper script
zcommand from"gh-r";         zl junegunn/fzf-bin
zcommand pick"bin/fzf-tmux"; zl junegunn/fzf
# Create and bind multiple widgets using fzf
turbo0 multisrc"shell/{completion,key-bindings}.zsh" \
        id-as"junegunn/fzf_completions" pick"/dev/null"
    zl junegunn/fzf

turbo0
zl skx/sysadmin-util

turbo0
zl rimraf/k

zt 0b atclone"git reset --hard; sed -i '/DIR/c\DIR                   34;5;30' LS_COLORS; dircolors -b LS_COLORS > c.zsh" atpull'%atclone' pick"c.zsh" nocompile'!'
z trapd00r/LS_COLORS

zt 0a has'systemctl'
z snippet OMZ::plugins/systemd/systemd.plugin.zsh

zt 0b
z ael-code/zsh-colored-man-pages

zt 0b has'git' pick'init.zsh' atload'alias gi="git-ignore"' blockf
zl laggardkernel/git-ignore

zt 0a make
zl sei40kr/zsh-fast-alias-tips

# Install local completions quietly

turbo0
zcr $ZSH/roles/zsh/completions

{% if ansible_facts['os_family']|lower == "darwin" %}
turbo0
zcr /usr/local/share/zsh/site-functions
{% endif %}

#################################################################
# IMPORTANT PLUGINS
#
zt 0c atload'bindkey "$terminfo[kcuu1]" history-substring-search-up; bindkey "$terminfo[kcud1]" history-substring-search-down'
zl zsh-users/zsh-history-substring-search

# Additional completion definitions
zt 0a blockf atpull'zcr .'
zl zsh-users/zsh-completions

# History search by `Ctrl+R`
zt 0b compile'{hsmw-*,test/*}'
z zdharma/history-search-multi-word

# Syntax highlighting
# (compinit without `-i` spawns warning on `sudo -s`)
turbo0 atinit"ZPLGM[COMPINIT_OPTS]='-i' zpcompinit; zpcdreplay"
    zl zdharma/fast-syntax-highlighting

# Autosuggestions
# Note: should go _after_ syntax highlighting plugin
zt 0b compile'{src/*.zsh,src/strategies/*}' atload'_zsh_autosuggest_start' 
zl zsh-users/zsh-autosuggestions
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1


#################################################################
# REMOVE TEMPORARY FUNCTIONS
#
unset -f turbo0
unset -f zload
unset -f zl
unset -f zt
unset -f zsnippet
