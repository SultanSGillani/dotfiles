#################################################################
# ZPLUGIN FUNCTIONS TO REDUCE VERBOSITY
#

zturbo0a()   { zplugin ice wait"0a" lucid             "${@}"; }
zturbo0b()   { zplugin ice wait"0b" lucid             "${@}"; }
zturbo0c()   { zplugin ice wait"0c" lucid             "${@}"; }
zturbo0()   { zplugin ice wait"0" lucid             "${@}"; }
zturbo1a()   { zplugin ice wait"1a" lucid             "${@}"; }
zturbo1b()   { zplugin ice wait"1b" lucid             "${@}"; }
zturbo1c()   { zplugin ice wait"1c" lucid             "${@}"; }
zturbo1d()   { zplugin ice wait"1d" lucid             "${@}"; }
zturbo1e()   { zplugin ice wait"1e" lucid             "${@}"; }
zturbo1f()   { zplugin ice wait"1f" lucid             "${@}"; }
zturbo1()   { zplugin ice wait"1" lucid             "${@}"; }
zturbo2a()   { zplugin ice wait"2a" lucid             "${@}"; }
zturbo2b()   { zplugin ice wait"2b" lucid             "${@}"; }
zturbo2c()   { zplugin ice wait"2c" lucid             "${@}"; }
zturbo2d()   { zplugin ice wait"2d" lucid             "${@}"; }
zturbo2e()   { zplugin ice wait"2e" lucid             "${@}"; }
zturbo2f()   { zplugin ice wait"2f" lucid             "${@}"; }
zturbo2()   { zplugin ice wait"2" lucid             "${@}"; }
zcommand() { zplugin ice wait"0b" lucid as"command" "${@}"; }
zlight()  { [ -zlight $2 ] && zplugin light "${@}" || zplugin "${@}"; }
zsnippet() { zplugin snippet                        "${@}"; }
zsvn() { zplugin ice svn                        "${@}"; }
zcr() { zplugin creinstall -q "${@}"; }


################################################################

# PROMPT

{% if zsh_prompt == 'agkozak' %}
zlight agkozak/agkozak-zsh-prompt
{% elif zsh_prompt == 'powerlevel10k' %}
zlight romkatv/powerlevel10k
{% elif zsh_prompt == 'alien' %}
zturbo0 pick"alien.zsh" multisrc'modules/{async,git,init,prompt,python,svn,system,theme}.zsh'
zlight eendroroy/alien
{% endif %}

# oh-my-zsh
zturbo0
zsvn; zsnippet OMZ::plugins/python
zturbo0
zsvn; zsnippet OMZ::plugins/virtualenv
zturbo0
zsvn; zsnippet OMZ::plugins/archlinux
zturbo0
zsvn; zsnippet OMZ::plugins/git
zturbo0
zsvn; zsnippet OMZ::plugins/tmux
zturbo0
zsvn; zsnippet OMZ::plugins/urltools
zturbo0 has'systemctl'
zsnippet OMZ::plugins/systemd/systemd.plugin.zsh

zcommand cp"httpstat.sh -> httpstat" pick"httpstat"
zlight b4b4r07/httpstat

zturbo0a as"program" pick"zsh-better-npm-completion.plugin.zsh"
zlight lukechilds/zsh-better-npm-completion

{% if ansible_facts['os_family']|lower == "darwin" %}
zsvn
zsnippet OMZ::plugins/osx
{% endif %}

{% if ansible_facts['distribution']|lower == "debian" %}
zturbo0
zsnippet OMZ::plugins/debian/debian.plugin.zsh
{% endif %}

{% if ansible_facts['distribution']|lower == "ubuntu" %}
zturbo0
zsnippet OMZ::plugins/ubuntu/ubuntu.plugin.zsh
{% endif %}

# docker-compose
zplugin ice as"completion"
zsnippet https://github.com/docker/compose/blob/master/contrib/completion/zsh/_docker-compose

# docker
zplugin ice as"completion"
zsnippet https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker

## fzf
# Install `fzf` bynary and tmux helper script

zcommand from"gh-r";         zlight junegunn/fzf-bin
zcommand pick"bin/fzf-tmux"; zlight junegunn/fzf
# Create and bind multiple widgets using fzf
zturbo0 multisrc"shell/{completion,key-bindings}.zsh" \
        id-as"junegunn/fzf_completions" pick"/dev/null"
    zlight junegunn/fzf

# fzy
zcommand make"!PREFIX=$ZPFX install" \
    atclone"cp contrib/fzy-* $ZPFX/bin/" \
    pick"$ZPFX/bin/fzy*"
zlight jhawthorn/fzy

zturbo0
zlight skx/sysadmin-util

zturbo0
zlight rimraf/k

zturbo0a
zlight ael-code/zsh-colored-man-pages

zturbo0a has'git' pick'init.zsh' atload'alias gi="git-ignore"' blockf
zlight laggardkernel/git-ignore

zturbo0 make
zlight sei40kr/zsh-fast-alias-tips

# Install local completions quietly

zturbo0a
zcr $ZSH/roles/zsh/completions

{% if ansible_facts['os_family']|lower == "darwin" %}
zturbo0
zcr /usr/local/share/zsh/site-functions
{% endif %}

#################################################################
# IMPORTANT PLUGINS
#
zturbo0b atload'bindkey "$terminfo[kcuu1]" history-substring-search-up; bindkey "$terminfo[kcud1]" history-substring-search-down'
zlight zsh-users/zsh-history-substring-search

# Additional completion definitions
zturbo0 blockf atpull'zcr .'
zlight zsh-users/zsh-completions

# History search by `Ctrl+R`
zturbo0a compile'{hsmw-*,test/*}'
zlight zdharma/history-search-multi-word

function cd_with_mkdir() {
  if [[ ! "$@" =~ "^$|^-$" ]] && [ ! -d "$@" ]; then
    echo "$@ not exists"
    execute_with_confirm "mkdir -p \"$@\""
  fi

  __enhancd::cd "$@"
}

export ENHANCD_FILTER=filter

zplugin ice pick"init.sh" lucid \
  atload'alias cd="cd_with_mkdir";export ENHANCD_FILTER="fzf --height 50% --reverse --ansi";export ENHANCD_DOT_SHOW_FULLPATH=1'
zplugin light "b4b4r07/enhancd"


# Autosuggestions & fast-syntax-highlighting
zturbo0b atload'_zsh_autosuggest_start'
zlight zsh-users/zsh-autosuggestions
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

zturbo0b atinit"ZPLGM[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay"
zlight zdharma/fast-syntax-highlighting

#################################################################
# REMOVE TEMPORARY FUNCTIONS
#
unset -f zturbo0
unset -f zturbo0a
unset -f zturbo0b
unset -f zturbo0c
unset -f zturbo1a
unset -f zturbo1b
unset -f zturbo1c
unset -f zturbo1d
unset -f zturbo1e
unset -f zturbo1f
unset -f zturbo1
unset -f zturbo2a
unset -f zturbo2b
unset -f zturbo2c
unset -f zturbo2d
unset -f zturbo2e
unset -f zturbo2f
unset -f zturbo2
unset -f zlight
unset -f zcommand
unset -f zsvn
unset -f zsnippet
unset -f zcr

### After the last of the compdefs

{ # idea totally stolen from prezto
  # Compile the completion dump to increase startup speed.
  zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
  if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
    zcompile "$zcompdump"
  fi
} &!

cd_to_most_recently_opened_directory

